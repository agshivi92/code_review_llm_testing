# This is a basic workflow to help you get started with Actions

name: Code Review With LLM

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    types: [opened, synchronize]
    paths: ['**.py', '**.sql']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "cortex_review"
  generate_diff:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch the head of the PR branch
          fetch-depth: 0 # Ensures full history is available for diffing against base

      # Set up python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install snowflake-connector-python
          
      - name: Extract PR diff
        id: diff
        run: |
          # Determine the base branch dynamically
          # If it's a PR event, use the PR's base.
          # If it's workflow_dispatch, use the input or default 'main'.
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_REF="${{ github.event.pull_request.base.ref }}"
            echo "Running for PR. Base ref is: $BASE_REF"
            # IMPORTANT: Fetch the determined base branch
            git fetch origin "$BASE_REF"
            # Generate the diff
            # Use the determined BASE_REF variable
            git diff origin/$BASE_REF...HEAD > diff_code_to_review.txt
            
          else
            BASE_REF="${{ github.event.inputs.base_branch || 'main' }}" # Use input or default 'main'
            echo "Running manually. Base ref is: $BASE_REF"
            # IMPORTANT: Fetch the determined base branch
            git fetch origin "$BASE_REF"
            # Generate the diff
            # Use the determined BASE_REF variable
            git diff origin/"$BASE_REF" HEAD > diff_code_to_review.txt
          fi
          echo "Diff successfully generated to diff_code_to_review.txt"
          ls -l diff_code_to_review.txt # Optional: to confirm the file exists and its size
      
      # - name: Run Snowflake Cortex Review
      #   id: cortex_review
      #   run: |
      #     # The diff_code_to_review.txt file is available directly in the current working directory
      #     python scripts/run_cortex_review.py diff_code_to_review.txt

      # - name: Post Review Comment
      #   uses: peter-evans/create-or-update-comment@v4
      #   if: github.event_name == 'pull_request'
      #   with:
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: ${{ steps.cortex_review.outputs.review }}
      
      
      
      - name: Upload diff.txt as an artifact 
        uses: actions/upload-artifact@v4
        id: upload_diff_step # Assign an ID to this step
        with:
          name: pr-diff-file
          path: diff_code_to_review.txt # Optional: retention-days: 5 # How long to keep the artifact
  
  # --- JOB 2: DOWNLOAD AND USE THE DIFF ---
  # use_diff:
  #   runs-on: ubuntu-latest
  #   needs: generate_diff # This job depends on 'generate_diff' completing successfully
  #   steps:
  #   - name: Download diff artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: pr-diff-file # Must match the 'name' given during upload
  #       path: ./downloaded-diff # Optional: Directory to download to (defaults to root of workspace)

  #   - name: Process the downloaded diff
  #     run: |
  #       echo "diff_code_to_review.txt has been downloaded and is available at: $(pwd)/downloaded-diff/diff_code_to_review.txt"
  #       echo "Content of downloaded diff_code_to_review.txt:"
  #       cat ./downloaded-diff/diff_code_to_review.txt # Display the content for verification

  #       # Now you can use 'diff_code_to_review.txt' for other purposes, e.g.:
  #       # - Analyze its content
  #       # - Pass it to another script
  #       # - Use it to decide further actions
  #       if grep -q "FIXME" ./downloaded-diff/diff_code_to_review.txt; then
  #         echo "WARNING: 'FIXME' found in the diff!"
  #         # exit 1 # Optionally fail the job
  #       fi
  #       echo "Diff processing complete."
          
